import * as os from 'os';
import { convertQuizToLaTeX } from '../src/convertQuizToLaTeX'
import { parse, GIFTQuestion } from 'gift-pegjs';

describe('conversion', () => {
    const giftString = [
        'What is 2 + 2 {=4 ~3 ~5}',
        '',
        'Question {',
        '    =Correct Answer',
        '    ~Incorrect Answer 1',
        '    ~Incorrect Answer 2',
        '    ~Incorrect Answer 3',
        '}'].join(os.EOL)

    const giftMarkdownString = [
        '[markdown]',
        'What *is* 2 + 2 {=**4** ~3 ~5}',
        '',
        'Q {=1 ~2}'
    ].join(os.EOL)

    // Moodle converts \n to line breaks in GIFT markdown to make code fences work
    const giftMarkdownCodeFenceString: string = `[markdown]A\\:\\n\`\`\`\\nb;\\nc\\n\`\`\`\n{=\`\`\`\\n1\\n\`\`\` ~\`\`\`\\n2\\n\`\`\`}`

    const quiz = parse(giftString)
    const markdownQuiz = parse(giftMarkdownString)
    const markdownCodeFenceQuiz = parse(giftMarkdownCodeFenceString)

    it('should convert 2-question GIFT to LaTeX', () => {
        expect(convertQuizToLaTeX(quiz, "1", false, false, false, false, "none")).toEqual(
            ['% LaTeX generated by gift2latex (npm package)',
                '\\begin{questions}',
                '\\question[1]',
                'What is 2 + 2',
                '\\begin{choices}',
                '\\CorrectChoice', 
                '4',
                '\\choice',
                '3',
                '\\choice',
                '5',
                '\\end{choices}',
                '\\question[1]',
                'Question',
                '\\begin{choices}',
                '\\CorrectChoice',
                'Correct Answer',
                '\\choice',
                'Incorrect Answer 1',
                '\\choice',
                'Incorrect Answer 2',
                '\\choice',
                'Incorrect Answer 3',
                '\\end{choices}',
                '\\end{questions}'].join(os.EOL));
    });

    it('should convert 2-question GIFT to LyX', () => {
        expect(convertQuizToLaTeX(quiz, "1", false, true, false, false, "none")).toEqual(
            ['% LaTeX generated by gift2latex (npm package)',
                '\\begin{myquestions}',
                '\\myquestion[1]',
                'What is 2 + 2',
                '\\begin{choices}',
                '\\CorrectChoice',
                '4',
                '\\choice',
                '3',
                '\\choice',
                '5',
                '\\end{choices}',
                '\\myquestion[1]',
                'Question',
                '\\begin{choices}',
                '\\CorrectChoice',
                'Correct Answer',
                '\\choice',
                'Incorrect Answer 1',
                '\\choice',
                'Incorrect Answer 2',
                '\\choice',
                'Incorrect Answer 3',
                '\\end{choices}',
                '\\end{myquestions}'].join(os.EOL));
    });

    it('should convert 2-question GIFT to LaTeX with \\half points', () => {
        expect(convertQuizToLaTeX(quiz, "\\half", false, false, false, false, "none")).toEqual(
            ['% LaTeX generated by gift2latex (npm package)',
                '\\begin{questions}',
                '\\question[\\half]',
                'What is 2 + 2',
                '\\begin{choices}',
                '\\CorrectChoice',
                '4',
                '\\choice',
                '3',
                '\\choice',
                '5',
                '\\end{choices}',
                '\\question[\\half]',
                'Question',
                '\\begin{choices}',
                '\\CorrectChoice',
                'Correct Answer',
                '\\choice',
                'Incorrect Answer 1',
                '\\choice',
                'Incorrect Answer 2',
                '\\choice',
                'Incorrect Answer 3',
                '\\end{choices}',
                '\\end{questions}'].join(os.EOL));
    });

    it('should convert 1-question GIFT in Markdown to LaTeX with markdown package', () => {
        expect(convertQuizToLaTeX(markdownQuiz, "1", false, false, true, false, "none")).toEqual(
            ['% LaTeX generated by gift2latex (npm package)',
                '\\begin{questions}',
                '\\question[1]',
                '\\begin{markdown}',
                'What *is* 2 + 2',
                '\\end{markdown}',
                '\\begin{choices}',
                '\\CorrectChoice',
                '\\begin{markdown}',
                '**4**',
                '\\end{markdown}',
                '\\choice',
                '\\begin{markdown}',
                '3',
                '\\end{markdown}',
                '\\choice',
                '\\begin{markdown}',
                '5',
                '\\end{markdown}',
                '\\end{choices}',
                // no markdown
                '\\question[1]',
                'Q',
                '\\begin{choices}',
                '\\CorrectChoice',
                '1',
                '\\choice',
                '2',
                '\\end{choices}',
                '\\end{questions}'].join(os.EOL));
    });

    it('should convert 1-question GIFT in Markdown with Codefence to LaTeX with markdown package', () => {
        expect(convertQuizToLaTeX(markdownCodeFenceQuiz, "1", false, false, true, false, "none").replace(/\r/g, '')).toEqual(`% LaTeX generated by gift2latex (npm package)
\\begin{questions}
\\question[1]
\\begin{markdown}
A:
\`\`\`
b;
c
\`\`\`
\\end{markdown}
\\begin{choices}
\\CorrectChoice
\\begin{markdown}
\`\`\`
1
\`\`\`
\\end{markdown}
\\choice
\\begin{markdown}
\`\`\`
2
\`\`\`
\\end{markdown}
\\end{choices}
\\end{questions}`)})
});

    // Moodle converts \n to line breaks in GIFT markdown to make code fences work
    const giftMarkdownCodeFenceString: string = `[markdown]A\\:\\n\`\`\`\\nb;\\nc\\n\`\`\`\n{=\`\`\`\\n1\\n\`\`\` ~\`\`\`\\n2\\n\`\`\`}`

    // const tf_quiz = parse("The sun rises in the east{FALSE#a#b}");

    // it('should convert 1-question TF GIFT to LyX true/false question', () => {
    //     expect(convertQuizToLaTeX(tf_quiz, "1", false, true, false)).toEqual(
    //         ['% LaTeX generated by gift2latex (npm package)',
    //         '\\begin{myquestions}',
    //         '\\myquestion[1]',
    //         'The sun rises in the east',
    //         '\\begin{choices}',
    //         '\\CorrectChoice',
    //         '4',
    //         '\\choice',
    //         '3',
    //         '\\choice',
    //         '5',
    //         '\\end{choices}',
    //         '\\myquestion[1]',
    //         'Question',
    //         '\\begin{choices}',
    //         '\\CorrectChoice',
    //         'Correct Answer',
    //         '\\choice',
    //         'Incorrect Answer 1',
    //         '\\choice',
    //         'Incorrect Answer 2',
    //         '\\choice',
    //         'Incorrect Answer 3',
    //         '\\end{choices}',
    //         '\\end{myquestions}'].join(os.EOL));
    // });

